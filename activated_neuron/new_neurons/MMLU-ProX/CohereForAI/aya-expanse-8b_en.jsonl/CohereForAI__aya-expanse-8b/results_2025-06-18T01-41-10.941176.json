{
  "results": {
    "mmlu_prox_en": {
      "exact_match,custom-extract": 0.33795390764520794,
      "exact_match_stderr,custom-extract": 0.0042708194000497385,
      "alias": "mmlu_prox_en"
    },
    "mmlu_prox_en_biology": {
      "alias": " - biology",
      "exact_match,custom-extract": 0.5815899581589958,
      "exact_match_stderr,custom-extract": 0.018435417952800234
    },
    "mmlu_prox_en_business": {
      "alias": " - business",
      "exact_match,custom-extract": 0.38783269961977185,
      "exact_match_stderr,custom-extract": 0.017357779481684384
    },
    "mmlu_prox_en_chemistry": {
      "alias": " - chemistry",
      "exact_match,custom-extract": 0.2146643109540636,
      "exact_match_stderr,custom-extract": 0.01220889301179861
    },
    "mmlu_prox_en_computer_science": {
      "alias": " - computer_science",
      "exact_match,custom-extract": 0.3463414634146341,
      "exact_match_stderr,custom-extract": 0.023526973238526986
    },
    "mmlu_prox_en_economics": {
      "alias": " - economics",
      "exact_match,custom-extract": 0.4372037914691943,
      "exact_match_stderr,custom-extract": 0.01708455825348354
    },
    "mmlu_prox_en_engineering": {
      "alias": " - engineering",
      "exact_match,custom-extract": 0.2672858617131063,
      "exact_match_stderr,custom-extract": 0.014223864311495873
    },
    "mmlu_prox_en_health": {
      "alias": " - health",
      "exact_match,custom-extract": 0.3799126637554585,
      "exact_match_stderr,custom-extract": 0.018531315850819085
    },
    "mmlu_prox_en_history": {
      "alias": " - history",
      "exact_match,custom-extract": 0.30183727034120733,
      "exact_match_stderr,custom-extract": 0.023549026830612073
    },
    "mmlu_prox_en_law": {
      "alias": " - law",
      "exact_match,custom-extract": 0.22314911366006257,
      "exact_match_stderr,custom-extract": 0.013451900965879
    },
    "mmlu_prox_en_math": {
      "alias": " - math",
      "exact_match,custom-extract": 0.33678756476683935,
      "exact_match_stderr,custom-extract": 0.012862857841122701
    },
    "mmlu_prox_en_other": {
      "alias": " - other",
      "exact_match,custom-extract": 0.3593073593073593,
      "exact_match_stderr,custom-extract": 0.015792725016278694
    },
    "mmlu_prox_en_philosophy": {
      "alias": " - philosophy",
      "exact_match,custom-extract": 0.2965931863727455,
      "exact_match_stderr,custom-extract": 0.020467707358619434
    },
    "mmlu_prox_en_physics": {
      "alias": " - physics",
      "exact_match,custom-extract": 0.26096997690531176,
      "exact_match_stderr,custom-extract": 0.012189586352868747
    },
    "mmlu_prox_en_psychology": {
      "alias": " - psychology",
      "exact_match,custom-extract": 0.46867167919799496,
      "exact_match_stderr,custom-extract": 0.01767610925908687
    }
  },
  "groups": {
    "mmlu_prox_en": {
      "exact_match,custom-extract": 0.33795390764520794,
      "exact_match_stderr,custom-extract": 0.0042708194000497385,
      "alias": "mmlu_prox_en"
    }
  },
  "group_subtasks": {
    "mmlu_prox_en": [
      "mmlu_prox_en_biology",
      "mmlu_prox_en_business",
      "mmlu_prox_en_chemistry",
      "mmlu_prox_en_computer_science",
      "mmlu_prox_en_economics",
      "mmlu_prox_en_engineering",
      "mmlu_prox_en_health",
      "mmlu_prox_en_history",
      "mmlu_prox_en_law",
      "mmlu_prox_en_math",
      "mmlu_prox_en_other",
      "mmlu_prox_en_philosophy",
      "mmlu_prox_en_physics",
      "mmlu_prox_en_psychology"
    ]
  },
  "configs": {
    "mmlu_prox_en_biology": {
      "task": "mmlu_prox_en_biology",
      "task_alias": "biology",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "en",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x1549b0695b80>, subject='biology')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b06951f0>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "The following are multiple choice questions (with answers) about biology. Think step by step and then finish your answer with \"the answer is (X)\" where X is the correct letter choice.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b0695af0>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "Question:",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "answer is \\(?([ABCDEFGHIJ])\\)?"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "CohereForAI/aya-expanse-8b",
        "tensor_parallel_size": 1,
        "dtype": "auto",
        "gpu_memory_utilization": 0.9
      }
    },
    "mmlu_prox_en_business": {
      "task": "mmlu_prox_en_business",
      "task_alias": "business",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "en",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x1549b06954c0>, subject='business')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b0695700>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "The following are multiple choice questions (with answers) about business. Think step by step and then finish your answer with \"the answer is (X)\" where X is the correct letter choice.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b0695940>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "Question:",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "answer is \\(?([ABCDEFGHIJ])\\)?"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "CohereForAI/aya-expanse-8b",
        "tensor_parallel_size": 1,
        "dtype": "auto",
        "gpu_memory_utilization": 0.9
      }
    },
    "mmlu_prox_en_chemistry": {
      "task": "mmlu_prox_en_chemistry",
      "task_alias": "chemistry",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "en",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x1549b070a1f0>, subject='chemistry')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b070a9d0>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "The following are multiple choice questions (with answers) about chemistry. Think step by step and then finish your answer with \"the answer is (X)\" where X is the correct letter choice.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b070ad30>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "Question:",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "answer is \\(?([ABCDEFGHIJ])\\)?"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "CohereForAI/aya-expanse-8b",
        "tensor_parallel_size": 1,
        "dtype": "auto",
        "gpu_memory_utilization": 0.9
      }
    },
    "mmlu_prox_en_computer_science": {
      "task": "mmlu_prox_en_computer_science",
      "task_alias": "computer_science",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "en",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x1549b070a3a0>, subject='computer science')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b070a5e0>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "The following are multiple choice questions (with answers) about computer_science. Think step by step and then finish your answer with \"the answer is (X)\" where X is the correct letter choice.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b070a820>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "Question:",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "answer is \\(?([ABCDEFGHIJ])\\)?"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "CohereForAI/aya-expanse-8b",
        "tensor_parallel_size": 1,
        "dtype": "auto",
        "gpu_memory_utilization": 0.9
      }
    },
    "mmlu_prox_en_economics": {
      "task": "mmlu_prox_en_economics",
      "task_alias": "economics",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "en",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x1549b06f58b0>, subject='economics')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b06f5af0>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "The following are multiple choice questions (with answers) about economics. Think step by step and then finish your answer with \"the answer is (X)\" where X is the correct letter choice.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b06f5d30>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "Question:",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "answer is \\(?([ABCDEFGHIJ])\\)?"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "CohereForAI/aya-expanse-8b",
        "tensor_parallel_size": 1,
        "dtype": "auto",
        "gpu_memory_utilization": 0.9
      }
    },
    "mmlu_prox_en_engineering": {
      "task": "mmlu_prox_en_engineering",
      "task_alias": "engineering",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "en",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x1549b06f50d0>, subject='engineering')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b069bdc0>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "The following are multiple choice questions (with answers) about engineering. Think step by step and then finish your answer with \"the answer is (X)\" where X is the correct letter choice.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b069bb80>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "Question:",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "answer is \\(?([ABCDEFGHIJ])\\)?"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "CohereForAI/aya-expanse-8b",
        "tensor_parallel_size": 1,
        "dtype": "auto",
        "gpu_memory_utilization": 0.9
      }
    },
    "mmlu_prox_en_health": {
      "task": "mmlu_prox_en_health",
      "task_alias": "health",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "en",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x1549b069b820>, subject='health')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b1187280>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "The following are multiple choice questions (with answers) about health. Think step by step and then finish your answer with \"the answer is (X)\" where X is the correct letter choice.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b11874c0>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "Question:",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "answer is \\(?([ABCDEFGHIJ])\\)?"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "CohereForAI/aya-expanse-8b",
        "tensor_parallel_size": 1,
        "dtype": "auto",
        "gpu_memory_utilization": 0.9
      }
    },
    "mmlu_prox_en_history": {
      "task": "mmlu_prox_en_history",
      "task_alias": "history",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "en",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x1549b1187e50>, subject='history')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b1393820>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "The following are multiple choice questions (with answers) about history. Think step by step and then finish your answer with \"the answer is (X)\" where X is the correct letter choice.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b1393280>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "Question:",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "answer is \\(?([ABCDEFGHIJ])\\)?"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "CohereForAI/aya-expanse-8b",
        "tensor_parallel_size": 1,
        "dtype": "auto",
        "gpu_memory_utilization": 0.9
      }
    },
    "mmlu_prox_en_law": {
      "task": "mmlu_prox_en_law",
      "task_alias": "law",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "en",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x1549b1197f70>, subject='law')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b1197af0>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "The following are multiple choice questions (with answers) about law. Think step by step and then finish your answer with \"the answer is (X)\" where X is the correct letter choice.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b11978b0>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "Question:",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "answer is \\(?([ABCDEFGHIJ])\\)?"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "CohereForAI/aya-expanse-8b",
        "tensor_parallel_size": 1,
        "dtype": "auto",
        "gpu_memory_utilization": 0.9
      }
    },
    "mmlu_prox_en_math": {
      "task": "mmlu_prox_en_math",
      "task_alias": "math",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "en",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x1549b13d53a0>, subject='math')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b13d58b0>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "The following are multiple choice questions (with answers) about math. Think step by step and then finish your answer with \"the answer is (X)\" where X is the correct letter choice.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b13d50d0>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "Question:",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "answer is \\(?([ABCDEFGHIJ])\\)?"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "CohereForAI/aya-expanse-8b",
        "tensor_parallel_size": 1,
        "dtype": "auto",
        "gpu_memory_utilization": 0.9
      }
    },
    "mmlu_prox_en_other": {
      "task": "mmlu_prox_en_other",
      "task_alias": "other",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "en",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x1549b1393dc0>, subject='other')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b1393160>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "The following are multiple choice questions (with answers) about other. Think step by step and then finish your answer with \"the answer is (X)\" where X is the correct letter choice.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b13934c0>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "Question:",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "answer is \\(?([ABCDEFGHIJ])\\)?"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "CohereForAI/aya-expanse-8b",
        "tensor_parallel_size": 1,
        "dtype": "auto",
        "gpu_memory_utilization": 0.9
      }
    },
    "mmlu_prox_en_philosophy": {
      "task": "mmlu_prox_en_philosophy",
      "task_alias": "philosophy",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "en",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x1549b13d5d30>, subject='philosophy')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b13d5670>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "The following are multiple choice questions (with answers) about philosophy. Think step by step and then finish your answer with \"the answer is (X)\" where X is the correct letter choice.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x154e8a55dd30>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "Question:",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "answer is \\(?([ABCDEFGHIJ])\\)?"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "CohereForAI/aya-expanse-8b",
        "tensor_parallel_size": 1,
        "dtype": "auto",
        "gpu_memory_utilization": 0.9
      }
    },
    "mmlu_prox_en_physics": {
      "task": "mmlu_prox_en_physics",
      "task_alias": "physics",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "en",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x1549b13d55e0>, subject='physics')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b1460d30>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "The following are multiple choice questions (with answers) about physics. Think step by step and then finish your answer with \"the answer is (X)\" where X is the correct letter choice.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b1460ee0>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "Question:",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "answer is \\(?([ABCDEFGHIJ])\\)?"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "CohereForAI/aya-expanse-8b",
        "tensor_parallel_size": 1,
        "dtype": "auto",
        "gpu_memory_utilization": 0.9
      }
    },
    "mmlu_prox_en_psychology": {
      "task": "mmlu_prox_en_psychology",
      "task_alias": "psychology",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "en",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x1549b14cb700>, subject='psychology')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x1549b14cb940>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "The following are multiple choice questions (with answers) about psychology. Think step by step and then finish your answer with \"the answer is (X)\" where X is the correct letter choice.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x154ef70bd430>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "Question:",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "answer is \\(?([ABCDEFGHIJ])\\)?"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "CohereForAI/aya-expanse-8b",
        "tensor_parallel_size": 1,
        "dtype": "auto",
        "gpu_memory_utilization": 0.9
      }
    }
  },
  "versions": {
    "mmlu_prox_en": 0.0,
    "mmlu_prox_en_biology": 0.0,
    "mmlu_prox_en_business": 0.0,
    "mmlu_prox_en_chemistry": 0.0,
    "mmlu_prox_en_computer_science": 0.0,
    "mmlu_prox_en_economics": 0.0,
    "mmlu_prox_en_engineering": 0.0,
    "mmlu_prox_en_health": 0.0,
    "mmlu_prox_en_history": 0.0,
    "mmlu_prox_en_law": 0.0,
    "mmlu_prox_en_math": 0.0,
    "mmlu_prox_en_other": 0.0,
    "mmlu_prox_en_philosophy": 0.0,
    "mmlu_prox_en_physics": 0.0,
    "mmlu_prox_en_psychology": 0.0
  },
  "n-shot": {
    "mmlu_prox_en_biology": 5,
    "mmlu_prox_en_business": 5,
    "mmlu_prox_en_chemistry": 5,
    "mmlu_prox_en_computer_science": 5,
    "mmlu_prox_en_economics": 5,
    "mmlu_prox_en_engineering": 5,
    "mmlu_prox_en_health": 5,
    "mmlu_prox_en_history": 5,
    "mmlu_prox_en_law": 5,
    "mmlu_prox_en_math": 5,
    "mmlu_prox_en_other": 5,
    "mmlu_prox_en_philosophy": 5,
    "mmlu_prox_en_physics": 5,
    "mmlu_prox_en_psychology": 5
  },
  "higher_is_better": {
    "mmlu_prox_en": {
      "exact_match": true
    },
    "mmlu_prox_en_biology": {
      "exact_match": true
    },
    "mmlu_prox_en_business": {
      "exact_match": true
    },
    "mmlu_prox_en_chemistry": {
      "exact_match": true
    },
    "mmlu_prox_en_computer_science": {
      "exact_match": true
    },
    "mmlu_prox_en_economics": {
      "exact_match": true
    },
    "mmlu_prox_en_engineering": {
      "exact_match": true
    },
    "mmlu_prox_en_health": {
      "exact_match": true
    },
    "mmlu_prox_en_history": {
      "exact_match": true
    },
    "mmlu_prox_en_law": {
      "exact_match": true
    },
    "mmlu_prox_en_math": {
      "exact_match": true
    },
    "mmlu_prox_en_other": {
      "exact_match": true
    },
    "mmlu_prox_en_philosophy": {
      "exact_match": true
    },
    "mmlu_prox_en_physics": {
      "exact_match": true
    },
    "mmlu_prox_en_psychology": {
      "exact_match": true
    }
  },
  "n-samples": {
    "mmlu_prox_en_biology": {
      "original": 717,
      "effective": 717
    },
    "mmlu_prox_en_business": {
      "original": 789,
      "effective": 789
    },
    "mmlu_prox_en_chemistry": {
      "original": 1132,
      "effective": 1132
    },
    "mmlu_prox_en_computer_science": {
      "original": 410,
      "effective": 410
    },
    "mmlu_prox_en_economics": {
      "original": 844,
      "effective": 844
    },
    "mmlu_prox_en_engineering": {
      "original": 969,
      "effective": 969
    },
    "mmlu_prox_en_health": {
      "original": 687,
      "effective": 687
    },
    "mmlu_prox_en_history": {
      "original": 381,
      "effective": 381
    },
    "mmlu_prox_en_law": {
      "original": 959,
      "effective": 959
    },
    "mmlu_prox_en_math": {
      "original": 1351,
      "effective": 1351
    },
    "mmlu_prox_en_other": {
      "original": 924,
      "effective": 924
    },
    "mmlu_prox_en_philosophy": {
      "original": 499,
      "effective": 499
    },
    "mmlu_prox_en_physics": {
      "original": 1299,
      "effective": 1299
    },
    "mmlu_prox_en_psychology": {
      "original": 798,
      "effective": 798
    }
  },
  "config": {
    "model": "vllm",
    "model_args": "pretrained=CohereForAI/aya-expanse-8b,tensor_parallel_size=1,dtype=auto,gpu_memory_utilization=0.9",
    "batch_size": "auto",
    "batch_sizes": [],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": "399ca364",
  "date": 1750176280.430406,
  "pretty_env_info": "PyTorch version: 2.5.1+cu121\nIs debug build: False\nCUDA used to build PyTorch: 12.1\nROCM used to build PyTorch: N/A\n\nOS: Ubuntu 20.04.3 LTS (x86_64)\nGCC version: (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0\nClang version: Could not collect\nCMake version: version 3.16.3\nLibc version: glibc-2.31\n\nPython version: 3.9.18 (main, Sep 11 2023, 13:41:44)  [GCC 11.2.0] (64-bit runtime)\nPython platform: Linux-5.15.0-69-generic-x86_64-with-glibc2.31\nIs CUDA available: True\nCUDA runtime version: 12.1.105\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: GPU 0: NVIDIA A100-PCIE-40GB\nNvidia driver version: 570.133.20\ncuDNN version: Could not collect\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:                    x86_64\nCPU op-mode(s):                  32-bit, 64-bit\nByte Order:                      Little Endian\nAddress sizes:                   46 bits physical, 57 bits virtual\nCPU(s):                          52\nOn-line CPU(s) list:             0-51\nThread(s) per core:              1\nCore(s) per socket:              26\nSocket(s):                       2\nNUMA node(s):                    4\nVendor ID:                       GenuineIntel\nCPU family:                      6\nModel:                           106\nModel name:                      Intel(R) Xeon(R) Gold 5320 CPU @ 2.20GHz\nStepping:                        6\nCPU MHz:                         800.000\nCPU max MHz:                     3400.0000\nCPU min MHz:                     800.0000\nBogoMIPS:                        4400.00\nL1d cache:                       2.4 MiB\nL1i cache:                       1.6 MiB\nL2 cache:                        65 MiB\nL3 cache:                        78 MiB\nNUMA node0 CPU(s):               0,4,8,12,16,20,24,28,32,36,40,44,48\nNUMA node1 CPU(s):               2,6,10,14,18,22,26,30,34,38,42,46,50\nNUMA node2 CPU(s):               1,5,9,13,17,21,25,29,33,37,41,45,49\nNUMA node3 CPU(s):               3,7,11,15,19,23,27,31,35,39,43,47,51\nVulnerability Itlb multihit:     Not affected\nVulnerability L1tf:              Not affected\nVulnerability Mds:               Not affected\nVulnerability Meltdown:          Not affected\nVulnerability Mmio stale data:   Mitigation; Clear CPU buffers; SMT disabled\nVulnerability Retbleed:          Not affected\nVulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl and seccomp\nVulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user pointer sanitization\nVulnerability Spectre v2:        Mitigation; Enhanced IBRS, IBPB conditional, RSB filling, PBRSB-eIBRS SW sequence\nVulnerability Srbds:             Not affected\nVulnerability Tsx async abort:   Not affected\nFlags:                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 invpcid_single intel_ppin ssbd mba ibrs ibpb stibp ibrs_enhanced fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm rdt_a avx512f avx512dq rdseed adx smap avx512ifma clflushopt clwb intel_pt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local split_lock_detect wbnoinvd dtherm ida arat pln pts avx512vbmi umip pku ospke avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg tme avx512_vpopcntdq la57 rdpid fsrm md_clear pconfig flush_l1d arch_capabilities\n\nVersions of relevant libraries:\n[pip3] numpy==1.26.3\n[pip3] torch==2.5.1+cu121\n[pip3] torchaudio==2.5.1+cu121\n[pip3] torchvision==0.20.1+cu121\n[pip3] triton==3.1.0\n[conda] numpy                     1.26.3                   pypi_0    pypi\n[conda] torch                     2.5.1+cu121              pypi_0    pypi\n[conda] torchaudio                2.5.1+cu121              pypi_0    pypi\n[conda] torchvision               0.20.1+cu121             pypi_0    pypi\n[conda] triton                    3.1.0                    pypi_0    pypi",
  "transformers_version": "4.52.4",
  "lm_eval_version": "0.4.8",
  "upper_git_hash": null,
  "tokenizer_pad_token": [
    "<PAD>",
    "0"
  ],
  "tokenizer_eos_token": [
    "<|END_OF_TURN_TOKEN|>",
    "255001"
  ],
  "tokenizer_bos_token": [
    "<BOS_TOKEN>",
    "5"
  ],
  "eot_token_id": 255001,
  "max_length": 8192,
  "task_hashes": {},
  "model_source": "vllm",
  "model_name": "CohereForAI/aya-expanse-8b",
  "model_name_sanitized": "CohereForAI__aya-expanse-8b",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": false,
  "chat_template": null,
  "chat_template_sha": null,
  "start_time": 2551594.980373077,
  "end_time": 2553796.964847434,
  "total_evaluation_time_seconds": "2201.984474356752"
}