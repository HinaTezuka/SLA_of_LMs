{
  "results": {
    "mmlu_prox_ko": {
      "exact_match,custom-extract": 0.0,
      "exact_match_stderr,custom-extract": 0.0,
      "alias": "mmlu_prox_ko"
    },
    "mmlu_prox_ko_biology": {
      "alias": " - biology",
      "exact_match,custom-extract": 0.0,
      "exact_match_stderr,custom-extract": 0.0
    },
    "mmlu_prox_ko_business": {
      "alias": " - business",
      "exact_match,custom-extract": 0.0,
      "exact_match_stderr,custom-extract": 0.0
    },
    "mmlu_prox_ko_chemistry": {
      "alias": " - chemistry",
      "exact_match,custom-extract": 0.0,
      "exact_match_stderr,custom-extract": 0.0
    },
    "mmlu_prox_ko_computer_science": {
      "alias": " - computer_science",
      "exact_match,custom-extract": 0.0,
      "exact_match_stderr,custom-extract": 0.0
    },
    "mmlu_prox_ko_economics": {
      "alias": " - economics",
      "exact_match,custom-extract": 0.0,
      "exact_match_stderr,custom-extract": 0.0
    },
    "mmlu_prox_ko_engineering": {
      "alias": " - engineering",
      "exact_match,custom-extract": 0.0,
      "exact_match_stderr,custom-extract": 0.0
    },
    "mmlu_prox_ko_health": {
      "alias": " - health",
      "exact_match,custom-extract": 0.0,
      "exact_match_stderr,custom-extract": 0.0
    },
    "mmlu_prox_ko_history": {
      "alias": " - history",
      "exact_match,custom-extract": 0.0,
      "exact_match_stderr,custom-extract": 0.0
    },
    "mmlu_prox_ko_law": {
      "alias": " - law",
      "exact_match,custom-extract": 0.0,
      "exact_match_stderr,custom-extract": 0.0
    },
    "mmlu_prox_ko_math": {
      "alias": " - math",
      "exact_match,custom-extract": 0.0,
      "exact_match_stderr,custom-extract": 0.0
    },
    "mmlu_prox_ko_other": {
      "alias": " - other",
      "exact_match,custom-extract": 0.0,
      "exact_match_stderr,custom-extract": 0.0
    },
    "mmlu_prox_ko_philosophy": {
      "alias": " - philosophy",
      "exact_match,custom-extract": 0.0,
      "exact_match_stderr,custom-extract": 0.0
    },
    "mmlu_prox_ko_physics": {
      "alias": " - physics",
      "exact_match,custom-extract": 0.0,
      "exact_match_stderr,custom-extract": 0.0
    },
    "mmlu_prox_ko_psychology": {
      "alias": " - psychology",
      "exact_match,custom-extract": 0.0,
      "exact_match_stderr,custom-extract": 0.0
    }
  },
  "groups": {
    "mmlu_prox_ko": {
      "exact_match,custom-extract": 0.0,
      "exact_match_stderr,custom-extract": 0.0,
      "alias": "mmlu_prox_ko"
    }
  },
  "group_subtasks": {
    "mmlu_prox_ko": [
      "mmlu_prox_ko_biology",
      "mmlu_prox_ko_business",
      "mmlu_prox_ko_chemistry",
      "mmlu_prox_ko_computer_science",
      "mmlu_prox_ko_economics",
      "mmlu_prox_ko_engineering",
      "mmlu_prox_ko_health",
      "mmlu_prox_ko_history",
      "mmlu_prox_ko_law",
      "mmlu_prox_ko_math",
      "mmlu_prox_ko_other",
      "mmlu_prox_ko_philosophy",
      "mmlu_prox_ko_physics",
      "mmlu_prox_ko_psychology"
    ]
  },
  "configs": {
    "mmlu_prox_ko_biology": {
      "task": "mmlu_prox_ko_biology",
      "task_alias": "biology",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "ko",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x14c54794bee0>, subject='biology')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x14c54794bc10>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "다음은 생물학에 관한 객관식 문제(정답 포함)입니다. 단계적으로 생각한 다음 \"답은 (X)입니다\"로 답변을 마무리하세요. 여기서 X는 올바른 선택지 문자입니다.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x14c54794b9d0>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "질문：",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "답은 \\(?([ABCDEFGHIJ])\\)?입니다"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "meta-llama/Meta-Llama-3-8B",
        "steer_path": "/home/s2410121/proj_LA/activated_neuron/new_neurons/MMLU-ProX/steer_configs/llama3/cos_sim/ko.pt",
        "device": "cuda"
      }
    },
    "mmlu_prox_ko_business": {
      "task": "mmlu_prox_ko_business",
      "task_alias": "business",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "ko",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x14c54794b280>, subject='business')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x14c547922f70>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "다음은 경영학에 관한 객관식 문제(정답 포함)입니다. 단계적으로 생각한 다음 \"답은 (X)입니다\"로 답변을 마무리하세요. 여기서 X는 올바른 선택지 문자입니다.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x14c547922af0>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "질문：",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "답은 \\(?([ABCDEFGHIJ])\\)?입니다"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "meta-llama/Meta-Llama-3-8B",
        "steer_path": "/home/s2410121/proj_LA/activated_neuron/new_neurons/MMLU-ProX/steer_configs/llama3/cos_sim/ko.pt",
        "device": "cuda"
      }
    },
    "mmlu_prox_ko_chemistry": {
      "task": "mmlu_prox_ko_chemistry",
      "task_alias": "chemistry",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "ko",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x14c5479c40d0>, subject='chemistry')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x14c54778bb80>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "다음은 화학에 관한 객관식 문제(정답 포함)입니다. 단계적으로 생각한 다음 \"답은 (X)입니다\"로 답변을 마무리하세요. 여기서 X는 올바른 선택지 문자입니다.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x14c54778b790>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "질문：",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "답은 \\(?([ABCDEFGHIJ])\\)?입니다"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "meta-llama/Meta-Llama-3-8B",
        "steer_path": "/home/s2410121/proj_LA/activated_neuron/new_neurons/MMLU-ProX/steer_configs/llama3/cos_sim/ko.pt",
        "device": "cuda"
      }
    },
    "mmlu_prox_ko_computer_science": {
      "task": "mmlu_prox_ko_computer_science",
      "task_alias": "computer_science",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "ko",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x14c54777cd30>, subject='computer science')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x14c54777c670>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "다음은 컴퓨터 과학에 관한 객관식 문제(정답 포함)입니다. 단계적으로 생각한 다음 \"답은 (X)입니다\"로 답변을 마무리하세요. 여기서 X는 올바른 선택지 문자입니다.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x14c54777c430>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "질문：",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "답은 \\(?([ABCDEFGHIJ])\\)?입니다"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "meta-llama/Meta-Llama-3-8B",
        "steer_path": "/home/s2410121/proj_LA/activated_neuron/new_neurons/MMLU-ProX/steer_configs/llama3/cos_sim/ko.pt",
        "device": "cuda"
      }
    },
    "mmlu_prox_ko_economics": {
      "task": "mmlu_prox_ko_economics",
      "task_alias": "economics",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "ko",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x14c54778bd30>, subject='economics')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x14c54778baf0>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "다음은 경제학에 관한 객관식 문제(정답 포함)입니다. 단계적으로 생각한 다음 \"답은 (X)입니다\"로 답변을 마무리하세요. 여기서 X는 올바른 선택지 문자입니다.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x14c54778b040>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "질문：",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "답은 \\(?([ABCDEFGHIJ])\\)?입니다"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "meta-llama/Meta-Llama-3-8B",
        "steer_path": "/home/s2410121/proj_LA/activated_neuron/new_neurons/MMLU-ProX/steer_configs/llama3/cos_sim/ko.pt",
        "device": "cuda"
      }
    },
    "mmlu_prox_ko_engineering": {
      "task": "mmlu_prox_ko_engineering",
      "task_alias": "engineering",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "ko",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x14c5479c45e0>, subject='engineering')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x14c5479d3700>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "다음은 공학에 관한 객관식 문제(정답 포함)입니다. 단계적으로 생각한 다음 \"답은 (X)입니다\"로 답변을 마무리하세요. 여기서 X는 올바른 선택지 문자입니다.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x14c5479d35e0>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "질문：",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "답은 \\(?([ABCDEFGHIJ])\\)?입니다"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "meta-llama/Meta-Llama-3-8B",
        "steer_path": "/home/s2410121/proj_LA/activated_neuron/new_neurons/MMLU-ProX/steer_configs/llama3/cos_sim/ko.pt",
        "device": "cuda"
      }
    },
    "mmlu_prox_ko_health": {
      "task": "mmlu_prox_ko_health",
      "task_alias": "health",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "ko",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x14c54778b310>, subject='health')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x14c5479d3e50>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "다음은 건강에 관한 객관식 문제(정답 포함)입니다. 단계적으로 생각한 다음 \"답은 (X)입니다\"로 답변을 마무리하세요. 여기서 X는 올바른 선택지 문자입니다.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x14c5479d3c10>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "질문：",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "답은 \\(?([ABCDEFGHIJ])\\)?입니다"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "meta-llama/Meta-Llama-3-8B",
        "steer_path": "/home/s2410121/proj_LA/activated_neuron/new_neurons/MMLU-ProX/steer_configs/llama3/cos_sim/ko.pt",
        "device": "cuda"
      }
    },
    "mmlu_prox_ko_history": {
      "task": "mmlu_prox_ko_history",
      "task_alias": "history",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "ko",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x14c5479d38b0>, subject='history')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x14c5477e71f0>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "다음은 역사에 관한 객관식 문제(정답 포함)입니다. 단계적으로 생각한 다음 \"답은 (X)입니다\"로 답변을 마무리하세요. 여기서 X는 올바른 선택지 문자입니다.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x14c5477e7280>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "질문：",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "답은 \\(?([ABCDEFGHIJ])\\)?입니다"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "meta-llama/Meta-Llama-3-8B",
        "steer_path": "/home/s2410121/proj_LA/activated_neuron/new_neurons/MMLU-ProX/steer_configs/llama3/cos_sim/ko.pt",
        "device": "cuda"
      }
    },
    "mmlu_prox_ko_law": {
      "task": "mmlu_prox_ko_law",
      "task_alias": "law",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "ko",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x14c5479c4d30>, subject='law')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x14c5479c49d0>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "다음은 법률에 관한 객관식 문제(정답 포함)입니다. 단계적으로 생각한 다음 \"답은 (X)입니다\"로 답변을 마무리하세요. 여기서 X는 올바른 선택지 문자입니다.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x14c5479c4790>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "질문：",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "답은 \\(?([ABCDEFGHIJ])\\)?입니다"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "meta-llama/Meta-Llama-3-8B",
        "steer_path": "/home/s2410121/proj_LA/activated_neuron/new_neurons/MMLU-ProX/steer_configs/llama3/cos_sim/ko.pt",
        "device": "cuda"
      }
    },
    "mmlu_prox_ko_math": {
      "task": "mmlu_prox_ko_math",
      "task_alias": "math",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "ko",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x14c5477e7d30>, subject='math')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x14c5477e7af0>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "다음은 수학에 관한 객관식 문제(정답 포함)입니다. 단계적으로 생각한 다음 \"답은 (X)입니다\"로 답변을 마무리하세요. 여기서 X는 올바른 선택지 문자입니다.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x14c5477e78b0>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "질문：",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "답은 \\(?([ABCDEFGHIJ])\\)?입니다"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "meta-llama/Meta-Llama-3-8B",
        "steer_path": "/home/s2410121/proj_LA/activated_neuron/new_neurons/MMLU-ProX/steer_configs/llama3/cos_sim/ko.pt",
        "device": "cuda"
      }
    },
    "mmlu_prox_ko_other": {
      "task": "mmlu_prox_ko_other",
      "task_alias": "other",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "ko",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x14c547b61940>, subject='other')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x14c547b61430>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "다음은 기타에 관한 객관식 문제(정답 포함)입니다. 단계적으로 생각한 다음 \"답은 (X)입니다\"로 답변을 마무리하세요. 여기서 X는 올바른 선택지 문자입니다.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x14c5477e7040>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "질문：",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "답은 \\(?([ABCDEFGHIJ])\\)?입니다"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "meta-llama/Meta-Llama-3-8B",
        "steer_path": "/home/s2410121/proj_LA/activated_neuron/new_neurons/MMLU-ProX/steer_configs/llama3/cos_sim/ko.pt",
        "device": "cuda"
      }
    },
    "mmlu_prox_ko_philosophy": {
      "task": "mmlu_prox_ko_philosophy",
      "task_alias": "philosophy",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "ko",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x14c547b613a0>, subject='philosophy')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x14c547b61550>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "다음은 철학에 관한 객관식 문제(정답 포함)입니다. 단계적으로 생각한 다음 \"답은 (X)입니다\"로 답변을 마무리하세요. 여기서 X는 올바른 선택지 문자입니다.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x14c547b61790>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "질문：",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "답은 \\(?([ABCDEFGHIJ])\\)?입니다"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "meta-llama/Meta-Llama-3-8B",
        "steer_path": "/home/s2410121/proj_LA/activated_neuron/new_neurons/MMLU-ProX/steer_configs/llama3/cos_sim/ko.pt",
        "device": "cuda"
      }
    },
    "mmlu_prox_ko_physics": {
      "task": "mmlu_prox_ko_physics",
      "task_alias": "physics",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "ko",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x14c547b611f0>, subject='physics')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x14c547bb9550>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "다음은 물리학에 관한 객관식 문제(정답 포함)입니다. 단계적으로 생각한 다음 \"답은 (X)입니다\"로 답변을 마무리하세요. 여기서 X는 올바른 선택지 문자입니다.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x14c547bb9940>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "질문：",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "답은 \\(?([ABCDEFGHIJ])\\)?입니다"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "meta-llama/Meta-Llama-3-8B",
        "steer_path": "/home/s2410121/proj_LA/activated_neuron/new_neurons/MMLU-ProX/steer_configs/llama3/cos_sim/ko.pt",
        "device": "cuda"
      }
    },
    "mmlu_prox_ko_psychology": {
      "task": "mmlu_prox_ko_psychology",
      "task_alias": "psychology",
      "dataset_path": "li-lab/MMLU-ProX",
      "dataset_name": "ko",
      "test_split": "test",
      "fewshot_split": "validation",
      "process_docs": "functools.partial(<function process_docs at 0x14c523d163a0>, subject='psychology')",
      "doc_to_text": "functools.partial(<function format_cot_example at 0x14c523d165e0>, including_answer=False)",
      "doc_to_target": "answer",
      "unsafe_code": false,
      "description": "다음은 심리학에 관한 객관식 문제(정답 포함)입니다. 단계적으로 생각한 다음 \"답은 (X)입니다\"로 답변을 마무리하세요. 여기서 X는 올바른 선택지 문자입니다.\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n",
        "doc_to_text": "functools.partial(<function format_cot_example at 0x14c523d16820>, including_answer=True)",
        "doc_to_target": ""
      },
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true,
          "ignore_case": true,
          "ignore_punctuation": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "</s>",
          "Q:",
          "질문：",
          "<|im_end|>"
        ],
        "do_sample": false,
        "temperature": 0.0,
        "max_gen_toks": 2048
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "custom-extract",
          "filter": [
            {
              "function": "regex",
              "regex_pattern": "답은 \\(?([ABCDEFGHIJ])\\)?입니다"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0,
        "pretrained": "meta-llama/Meta-Llama-3-8B",
        "steer_path": "/home/s2410121/proj_LA/activated_neuron/new_neurons/MMLU-ProX/steer_configs/llama3/cos_sim/ko.pt",
        "device": "cuda"
      }
    }
  },
  "versions": {
    "mmlu_prox_ko": 0.0,
    "mmlu_prox_ko_biology": 0.0,
    "mmlu_prox_ko_business": 0.0,
    "mmlu_prox_ko_chemistry": 0.0,
    "mmlu_prox_ko_computer_science": 0.0,
    "mmlu_prox_ko_economics": 0.0,
    "mmlu_prox_ko_engineering": 0.0,
    "mmlu_prox_ko_health": 0.0,
    "mmlu_prox_ko_history": 0.0,
    "mmlu_prox_ko_law": 0.0,
    "mmlu_prox_ko_math": 0.0,
    "mmlu_prox_ko_other": 0.0,
    "mmlu_prox_ko_philosophy": 0.0,
    "mmlu_prox_ko_physics": 0.0,
    "mmlu_prox_ko_psychology": 0.0
  },
  "n-shot": {
    "mmlu_prox_ko_biology": 5,
    "mmlu_prox_ko_business": 5,
    "mmlu_prox_ko_chemistry": 5,
    "mmlu_prox_ko_computer_science": 5,
    "mmlu_prox_ko_economics": 5,
    "mmlu_prox_ko_engineering": 5,
    "mmlu_prox_ko_health": 5,
    "mmlu_prox_ko_history": 5,
    "mmlu_prox_ko_law": 5,
    "mmlu_prox_ko_math": 5,
    "mmlu_prox_ko_other": 5,
    "mmlu_prox_ko_philosophy": 5,
    "mmlu_prox_ko_physics": 5,
    "mmlu_prox_ko_psychology": 5
  },
  "higher_is_better": {
    "mmlu_prox_ko": {
      "exact_match": true
    },
    "mmlu_prox_ko_biology": {
      "exact_match": true
    },
    "mmlu_prox_ko_business": {
      "exact_match": true
    },
    "mmlu_prox_ko_chemistry": {
      "exact_match": true
    },
    "mmlu_prox_ko_computer_science": {
      "exact_match": true
    },
    "mmlu_prox_ko_economics": {
      "exact_match": true
    },
    "mmlu_prox_ko_engineering": {
      "exact_match": true
    },
    "mmlu_prox_ko_health": {
      "exact_match": true
    },
    "mmlu_prox_ko_history": {
      "exact_match": true
    },
    "mmlu_prox_ko_law": {
      "exact_match": true
    },
    "mmlu_prox_ko_math": {
      "exact_match": true
    },
    "mmlu_prox_ko_other": {
      "exact_match": true
    },
    "mmlu_prox_ko_philosophy": {
      "exact_match": true
    },
    "mmlu_prox_ko_physics": {
      "exact_match": true
    },
    "mmlu_prox_ko_psychology": {
      "exact_match": true
    }
  },
  "n-samples": {
    "mmlu_prox_ko_biology": {
      "original": 717,
      "effective": 717
    },
    "mmlu_prox_ko_business": {
      "original": 789,
      "effective": 789
    },
    "mmlu_prox_ko_chemistry": {
      "original": 1132,
      "effective": 1132
    },
    "mmlu_prox_ko_computer_science": {
      "original": 410,
      "effective": 410
    },
    "mmlu_prox_ko_economics": {
      "original": 844,
      "effective": 844
    },
    "mmlu_prox_ko_engineering": {
      "original": 969,
      "effective": 969
    },
    "mmlu_prox_ko_health": {
      "original": 687,
      "effective": 687
    },
    "mmlu_prox_ko_history": {
      "original": 381,
      "effective": 381
    },
    "mmlu_prox_ko_law": {
      "original": 959,
      "effective": 959
    },
    "mmlu_prox_ko_math": {
      "original": 1351,
      "effective": 1351
    },
    "mmlu_prox_ko_other": {
      "original": 924,
      "effective": 924
    },
    "mmlu_prox_ko_philosophy": {
      "original": 499,
      "effective": 499
    },
    "mmlu_prox_ko_physics": {
      "original": 1299,
      "effective": 1299
    },
    "mmlu_prox_ko_psychology": {
      "original": 798,
      "effective": 798
    }
  },
  "config": {
    "model": "steered",
    "model_args": "pretrained=meta-llama/Meta-Llama-3-8B,steer_path=/home/s2410121/proj_LA/activated_neuron/new_neurons/MMLU-ProX/steer_configs/llama3/cos_sim/ko.pt,device=cuda",
    "model_num_parameters": 8030261248,
    "model_dtype": "torch.bfloat16",
    "model_revision": "main",
    "model_sha": "8cde5ca8380496c9a6cc7ef3a8b46a0372a1d920",
    "batch_size": "auto",
    "batch_sizes": [],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": "ce765f6d",
  "date": 1750218777.550012,
  "pretty_env_info": "PyTorch version: 2.5.1+cu121\nIs debug build: False\nCUDA used to build PyTorch: 12.1\nROCM used to build PyTorch: N/A\n\nOS: Ubuntu 20.04.3 LTS (x86_64)\nGCC version: (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0\nClang version: Could not collect\nCMake version: version 3.16.3\nLibc version: glibc-2.31\n\nPython version: 3.9.18 (main, Sep 11 2023, 13:41:44)  [GCC 11.2.0] (64-bit runtime)\nPython platform: Linux-5.15.0-69-generic-x86_64-with-glibc2.31\nIs CUDA available: True\nCUDA runtime version: 12.1.105\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: GPU 0: NVIDIA A40\nNvidia driver version: 570.133.20\ncuDNN version: Could not collect\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:                    x86_64\nCPU op-mode(s):                  32-bit, 64-bit\nByte Order:                      Little Endian\nAddress sizes:                   46 bits physical, 57 bits virtual\nCPU(s):                          52\nOn-line CPU(s) list:             0-51\nThread(s) per core:              1\nCore(s) per socket:              26\nSocket(s):                       2\nNUMA node(s):                    4\nVendor ID:                       GenuineIntel\nCPU family:                      6\nModel:                           106\nModel name:                      Intel(R) Xeon(R) Gold 5320 CPU @ 2.20GHz\nStepping:                        6\nCPU MHz:                         2800.001\nCPU max MHz:                     3400.0000\nCPU min MHz:                     800.0000\nBogoMIPS:                        4400.00\nL1d cache:                       2.4 MiB\nL1i cache:                       1.6 MiB\nL2 cache:                        65 MiB\nL3 cache:                        78 MiB\nNUMA node0 CPU(s):               0,4,8,12,16,20,24,28,32,36,40,44,48\nNUMA node1 CPU(s):               2,6,10,14,18,22,26,30,34,38,42,46,50\nNUMA node2 CPU(s):               1,5,9,13,17,21,25,29,33,37,41,45,49\nNUMA node3 CPU(s):               3,7,11,15,19,23,27,31,35,39,43,47,51\nVulnerability Itlb multihit:     Not affected\nVulnerability L1tf:              Not affected\nVulnerability Mds:               Not affected\nVulnerability Meltdown:          Not affected\nVulnerability Mmio stale data:   Mitigation; Clear CPU buffers; SMT disabled\nVulnerability Retbleed:          Not affected\nVulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl and seccomp\nVulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user pointer sanitization\nVulnerability Spectre v2:        Mitigation; Enhanced IBRS, IBPB conditional, RSB filling, PBRSB-eIBRS SW sequence\nVulnerability Srbds:             Not affected\nVulnerability Tsx async abort:   Not affected\nFlags:                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 invpcid_single intel_ppin ssbd mba ibrs ibpb stibp ibrs_enhanced fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm rdt_a avx512f avx512dq rdseed adx smap avx512ifma clflushopt clwb intel_pt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local split_lock_detect wbnoinvd dtherm ida arat pln pts avx512vbmi umip pku ospke avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg tme avx512_vpopcntdq la57 rdpid fsrm md_clear pconfig flush_l1d arch_capabilities\n\nVersions of relevant libraries:\n[pip3] numpy==1.26.3\n[pip3] torch==2.5.1+cu121\n[pip3] torchaudio==2.5.1+cu121\n[pip3] torchvision==0.20.1+cu121\n[pip3] triton==3.1.0\n[conda] numpy                     1.26.3                   pypi_0    pypi\n[conda] torch                     2.5.1+cu121              pypi_0    pypi\n[conda] torchaudio                2.5.1+cu121              pypi_0    pypi\n[conda] torchvision               0.20.1+cu121             pypi_0    pypi\n[conda] triton                    3.1.0                    pypi_0    pypi",
  "transformers_version": "4.52.4",
  "lm_eval_version": "0.4.8",
  "upper_git_hash": null,
  "tokenizer_pad_token": [
    "<|end_of_text|>",
    "128001"
  ],
  "tokenizer_eos_token": [
    "<|end_of_text|>",
    "128001"
  ],
  "tokenizer_bos_token": [
    "<|begin_of_text|>",
    "128000"
  ],
  "eot_token_id": 128001,
  "max_length": 8192,
  "task_hashes": {},
  "model_source": "steered",
  "model_name": "meta-llama/Meta-Llama-3-8B",
  "model_name_sanitized": "meta-llama__Meta-Llama-3-8B",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": false,
  "chat_template": null,
  "chat_template_sha": null,
  "start_time": 2594148.829761579,
  "end_time": 3169848.343000327,
  "total_evaluation_time_seconds": "575699.5132387476"
}