Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:02<00:08,  2.95s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:15<00:17,  8.63s/it]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:18<00:06,  6.00s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:19<00:00,  3.91s/it]Loading checkpoint shards: 100%|██████████| 4/4 [00:19<00:00,  4.78s/it]
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:11<00:22, 11.36s/it]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:21<00:10, 10.65s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:32<00:00, 10.58s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:32<00:00, 10.67s/it]
Traceback (most recent call last):
  File "/home/s2410121/proj_LA/activated_neuron/new_neurons/transfer_neurons/qa/calc_centroids_qa.py", line 61, in <module>
    model = AutoModelForCausalLM.from_pretrained(model_name).to(device)
  File "/home/s2410121/conda/x64/envs/proj_LA_neuron_detection/lib/python3.9/site-packages/transformers/modeling_utils.py", line 3157, in to
    return super().to(*args, **kwargs)
  File "/home/s2410121/conda/x64/envs/proj_LA_neuron_detection/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1340, in to
    return self._apply(convert)
  File "/home/s2410121/conda/x64/envs/proj_LA_neuron_detection/lib/python3.9/site-packages/torch/nn/modules/module.py", line 900, in _apply
    module._apply(fn)
  File "/home/s2410121/conda/x64/envs/proj_LA_neuron_detection/lib/python3.9/site-packages/torch/nn/modules/module.py", line 900, in _apply
    module._apply(fn)
  File "/home/s2410121/conda/x64/envs/proj_LA_neuron_detection/lib/python3.9/site-packages/torch/nn/modules/module.py", line 900, in _apply
    module._apply(fn)
  [Previous line repeated 2 more times]
  File "/home/s2410121/conda/x64/envs/proj_LA_neuron_detection/lib/python3.9/site-packages/torch/nn/modules/module.py", line 927, in _apply
    param_applied = fn(param)
  File "/home/s2410121/conda/x64/envs/proj_LA_neuron_detection/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1326, in convert
    return t.to(
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 224.00 MiB. GPU 0 has a total capacity of 39.38 GiB of which 153.38 MiB is free. Including non-PyTorch memory, this process has 39.22 GiB memory in use. Of the allocated memory 38.70 GiB is allocated by PyTorch, and 30.53 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
